input {
  http_poller {
   schedule => { every => "10s" }
    urls => {
      test1 => {
        method => get
        url => "http://transformation-service:8001/test1"
        headers => {
          Accept => "application/json"
        }
     }
    }
    codec => json {
      target => "input"
    }
  }
}

filter {
  if [input]{
    http{
      verb => "POST" 
      url => "http://transformation-service:8001/full-transform"
      body => {
        "template_miner_ID" => "test"
        "smart_filter_THRESHOLD" => 0.5
        "pii_detection_LANG" => "en"
        "msg" => "%{[input][msg]}"
      }
      body_format => "json"
      target_body => "meta"
    }
    
    mutate {
      add_field => { "Message" => "%{[input][msg]}"}
      add_field => { "SmartFilter" => "%{[meta][anomaly]}" }
      add_field => { "Template" => "%{[meta][template]}" }
      add_field => { "PII" => "%{[meta][PII]}" }
      remove_field => ["input", "event", "meta"]
    }
  }
}

output {
  if [Message] {
    mongodb {
      id => "logstash-mongo"
      database => "solution_test"
      collection => "test_1"
      isodate => "true"
      uri => "mongodb://mongo:27017/"
    }
  } else {
      file {
        path => "/var/log/logstash/http_poller_failures.log"
        codec => rubydebug
      }
  }
}
